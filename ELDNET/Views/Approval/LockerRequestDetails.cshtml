@model ELDNET.Models.LockerRequest

@{
    ViewData["Title"] = "Locker Request Details";
}

<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.min.css" rel="stylesheet">
    @* Ensure this links to your main CSS file that now contains the appended styles *@
    <link href="~/css/site.css" rel="stylesheet" /> @* <--- IMPORTANT: Replace with the actual path to your main CSS file *@
</head>

<div class="container py-5 animate__animated animate__fadeIn">
    <div class="reservation-modern-card">
        @* Using the new modern card class for consistency *@
        <div class="card-header-modern-reservation">
            @* Using the green-themed header for reservation style *@
            <h2 class="mb-2"><i class="bi bi-box-seam me-3"></i>Locker Request Details</h2>
            <p class="text-white-75">Comprehensive information for this locker request.</p>
        </div>

        <div class="card-body p-lg-5 p-4">
            <div class="row g-5">

                <!-- Requestor Information Section -->
                <div class="col-lg-6">
                    <h5 class="reservation-detail-section-title">
                        @* Using the new detail section title class *@
                        <i class="bi bi-person-circle"></i>Requestor Information
                    </h5>
                    <dl class="row reservation-detail-list-modern">
                        @* Using the new definition list class *@
                        <dt class="col-sm-5">@Html.DisplayNameFor(model => model.Name)</dt>
                        <dd class="col-sm-7">@Html.DisplayFor(model => model.Name)</dd>

                        <dt class="col-sm-5">@Html.DisplayNameFor(model => model.IdNumber)</dt>
                        <dd class="col-sm-7">@Html.DisplayFor(model => model.IdNumber)</dd>

                        <dt class="col-sm-5">@Html.DisplayNameFor(model => model.ContactNumber)</dt>
                        <dd class="col-sm-7">@Html.DisplayFor(model => model.ContactNumber)</dd>

                        <dt class="col-sm-5">@Html.DisplayNameFor(model => model.Semester)</dt>
                        <dd class="col-sm-7">@Html.DisplayFor(model => model.Semester)</dd>
                    </dl>
                </div>

                <!-- Locker & Document Information Section -->
                <div class="col-lg-6 divider-line">
                    @* Retaining divider-line class *@
                    <h5 class="reservation-detail-section-title">
                        @* Using the new detail section title class *@
                        <i class="bi bi-key"></i>Locker Information
                    </h5>
                    <dl class="row reservation-detail-list-modern">
                        @* Using the new definition list class *@
                        <dt class="col-sm-5">@Html.DisplayNameFor(model => model.LockerNumber)</dt>
                        <dd class="col-sm-7">@Html.DisplayFor(model => model.LockerNumber)</dd>

                        <dt class="col-sm-5">@Html.DisplayNameFor(model => model.AcceptTerms)</dt>
                        <dd class="col-sm-7">@(Model.AcceptTerms ? "Yes" : "No")</dd>
                    </dl>

                    <h5 class="reservation-detail-section-title mt-5">
                        @* Using the new detail section title class *@
                        <i class="bi bi-file-earmark-text"></i>Uploaded Files
                    </h5>
                    <dl class="row reservation-detail-list-modern">
                        @* Using the new definition list class *@
                        <dt class="col-sm-5">Study Load File:</dt>
                        <dd class="col-sm-7">
                            @if (!string.IsNullOrEmpty(Model.StudyLoadPath))
                            {
                                <a href="@Url.Content(Model.StudyLoadPath)" target="_blank" class="file-link">
                                    @* Using the file-link class *@
                                    <i class="bi bi-box-arrow-down-right"></i> View Study Load
                                </a>
                            }
                            else
                            {
                                <span class="text-muted fst-italic">No file uploaded</span>
                            }
                        </dd>

                        <dt class="col-sm-5">Registration Form:</dt>
                        <dd class="col-sm-7">
                            @if (!string.IsNullOrEmpty(Model.RegistrationPath))
                            {
                                <a href="@Url.Content(Model.RegistrationPath)" target="_blank" class="file-link">
                                    @* Using the file-link class *@
                                    <i class="bi bi-box-arrow-down-right"></i> View Registration Form
                                </a>
                            }
                            else
                            {
                                <span class="text-muted fst-italic">No file uploaded</span>
                            }
                        </dd>
                    </dl>
                </div>
            </div>

            <!-- Approval Workflow Section -->
            <div class="mt-5 pt-5 border-top text-center">
                <h4 class="reservation-detail-section-title justify-content-center mb-5">
                    @* Using the new detail section title class *@
                    <i class="bi bi-diagram-3"></i>Approval Workflow
                </h4>

                <div class="row justify-content-center g-4">
                    <!-- Single Approver for Locker Request -->
                    <div class="col-md-6 col-lg-4">
                        <div class="card reservation-approval-card h-100">
                            @* Using the new approval card class *@
                            <div class="card-body">
                                <h5 class="mb-3">
                                    @if (!string.IsNullOrEmpty(Model.Approver1Name))
                                    {
                                        @Model.Approver1Name
                                    }
                                    else
                                    {
                                        <span>Locker Approver</span>
                                    }
                                </h5>
                                <div class="approval-status mb-4">
                                    @if (Model.Approver1Status == "Pending")
                                    {
                                        <i class="bi bi-hourglass-split text-warning"></i>
                                        <span class="badge reservation-badge-modern reservation-badge-pending">Pending</span>
     @* Using the new badge classes *@
                                    }
                                    else if (Model.Approver1Status == "Approved")
                                    {
                                        <i class="bi bi-check-circle-fill text-success"></i>
                                        <span class="badge reservation-badge-modern reservation-badge-approved">Approved</span>
     @* Using the new badge classes *@
                                    }
                                    else
                                    {
                                        <i class="bi bi-x-circle-fill text-danger"></i>
                                        <span class="badge reservation-badge-modern reservation-badge-denied">Denied</span>
     @* Using the new badge classes *@
                                    }
                                </div>
                                <form asp-controller="Approval" asp-action="SetApproval" method="post" class="mt-auto">
                                    <input type="hidden" name="id" value="@Model.Id" />
                                    <input type="hidden" name="type" value="Locker" />
                                    <input type="hidden" name="approver" value="1" />

                                    <button type="submit" name="decision" value="Approved" class="btn btn-success btn-sm me-2 reservation-btn-modern">Approve</button> @* Using new btn-modern class *@
                                    <button type="submit" name="decision" value="Denied" class="btn btn-danger btn-sm reservation-btn-modern">Deny</button> @* Using new btn-modern class *@
                                </form>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Final Confirmation Section -->
                <div class="mt-5 pt-4 border-top">
                    <form asp-controller="Approval" asp-action="ConfirmApproval" method="post" class="mb-4">
                        <input type="hidden" name="id" value="@Model.Id" />
                        <input type="hidden" name="type" value="Locker" />
                        <button type="submit" class="btn reservation-btn-primary btn-lg reservation-btn-modern">
                            @* Using green primary and btn-modern class *@
                            <i class="bi bi-check2-circle me-2"></i>Confirm Final Decision
                        </button>
                    </form>
                    <p class="reservation-final-status-text mt-3">Final Status: <strong class="reservation-final-status-@(Model.FinalStatus?.ToLower())">@Model.FinalStatus</strong></p> @* Using new final status text classes *@

                    <a asp-action="Index" class="btn btn-outline-secondary btn-lg reservation-btn-modern mt-4">
                        @* Using btn-modern class *@
                        <i class="bi bi-arrow-left me-2"></i>Back to List
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>