@model ELDNET.Models.GatePass

@{
    ViewData["Title"] = "Gate Pass Details";
}

<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.min.css" rel="stylesheet">
    <link href="~/css/site.css" rel="stylesheet" />
    <link href="~/css/gatepassdetails.css" rel="stylesheet" /> @* New CSS file for specific overrides *@
</head>

<div class="container py-3 animate__animated animate__fadeIn">
    <div class="modern-card">
        <div class="card-header-modern-compact">
            <h2 class="mb-1"><i class="bi bi-person-lines-fill me-3"></i>Gate Pass Details</h2> @* Increased header size via CSS *@
            <p class="text-white-75 mb-0">Comprehensive information for this gate pass request.</p>
        </div>

        <div class="card-body p-lg-5 p-4">
            <div class="row g-5">

                <!-- Requestor Information Section -->
                <div class="col-lg-6">
                    <h5 class="detail-section-title">
                        <i class="bi bi-person-circle"></i>Requestor Information
                    </h5>
                    <dl class="row detail-list-modern-improved">
                        <dt class="col-sm-5">@Html.DisplayNameFor(model => model.Name)</dt>
                        <dd class="col-sm-7">@Html.DisplayFor(model => model.Name)</dd>

                        <dt class="col-sm-5">@Html.DisplayNameFor(model => model.SchoolYear)</dt>
                        <dd class="col-sm-7">@Html.DisplayFor(model => model.SchoolYear)</dd>

                        <dt class="col-sm-5">@Html.DisplayNameFor(model => model.Address)</dt>
                        <dd class="col-sm-7">@Html.DisplayFor(model => model.Address)</dd>

                        <dt class="col-sm-5">@Html.DisplayNameFor(model => model.Date)</dt>
                        <dd class="col-sm-7">@Model.Date.ToString("MMMM dd, yyyy")</dd>

                        <dt class="col-sm-5">@Html.DisplayNameFor(model => model.Role)</dt>
                        <dd class="col-sm-7">@Html.DisplayFor(model => model.Role)</dd>

                        <dt class="col-sm-5">@Html.DisplayNameFor(model => model.Department)</dt>
                        <dd class="col-sm-7">@Html.DisplayFor(model => model.Department)</dd>

                        <dt class="col-sm-5">@Html.DisplayNameFor(model => model.CourseYear)</dt>
                        <dd class="col-sm-7">@Html.DisplayFor(model => model.CourseYear)</dd>
                    </dl>
                </div>

                <!-- Vehicle & Document Information Section -->
                <div class="col-lg-6 divider-line">
                    <h5 class="detail-section-title">
                        <i class="bi bi-car-front"></i>Vehicle Information
                    </h5>
                    <dl class="row detail-list-modern-improved">
                        <dt class="col-sm-5">@Html.DisplayNameFor(model => model.PlateNumber)</dt>
                        <dd class="col-sm-7">@Html.DisplayFor(model => model.PlateNumber)</dd>

                        <dt class="col-sm-5">@Html.DisplayNameFor(model => model.Maker)</dt>
                        <dd class="col-sm-7">@Html.DisplayFor(model => model.Maker)</dd>

                        <dt class="col-sm-5">@Html.DisplayNameFor(model => model.Color)</dt>
                        <dd class="col-sm-7">@Html.DisplayFor(model => model.Color)</dd>
                    </dl>

                    <h5 class="detail-section-title mt-5">
                        <i class="bi bi-file-earmark-text"></i>Uploaded Files
                    </h5>
                    <dl class="row detail-list-modern-improved">
                        <dt class="col-sm-5">Study Load File:</dt>
                        <dd class="col-sm-7">
                            @if (!string.IsNullOrEmpty(Model.StudyLoadPath))
                            {
                                <a href="@Url.Content(Model.StudyLoadPath)" target="_blank" class="file-link">
                                    <i class="bi bi-box-arrow-down-right"></i> View Study Load
                                </a>
                            }
                            else
                            {
                                <span class="text-muted fst-italic">No file uploaded</span>
                            }
                        </dd>

                        <dt class="col-sm-5">Registration Form:</dt>
                        <dd class="col-sm-7">
                            @if (!string.IsNullOrEmpty(Model.RegistrationPath))
                            {
                                <a href="@Url.Content(Model.RegistrationPath)" target="_blank" class="file-link">
                                    <i class="bi bi-box-arrow-down-right"></i> View Registration Form
                                </a>
                            }
                            else
                            {
                                <span class="text-muted fst-italic">No file uploaded</span>
                            }
                        </dd>
                    </dl>
                </div>
            </div>

            <!-- Approval Workflow Section -->
            <div class="mt-5 pt-5 border-top text-center">
                <h4 class="detail-section-title justify-content-center mb-5">
                    <i class="bi bi-diagram-3"></i>Approval Workflow
                </h4>

                <div class="row justify-content-center g-4">
                    <!-- Approver Loop - Refined Card Format -->
                    @foreach (var approver in new[]
                                        {
                                        new { Name = Model.Approver1Name, Status = Model.Approver1Status, Number = 1 },
                                        new { Name = Model.Approver2Name, Status = Model.Approver2Status, Number = 2 },
                                        new { Name = Model.Approver3Name, Status = Model.Approver3Status, Number = 3 }
                                        })
                    {
                        <div class="col-md-6 col-lg-4">
                            <div class="card gp-approver-card-new h-100 shadow-sm border-0">
                                <div class="card-body d-flex flex-column align-items-center p-4">
                                    <div class="gp-approver-status-icon mb-2">
                                        @* Icon on top *@
                                        @if (approver.Status == "Pending")
                                        {
                                            <i class="bi bi-hourglass-split text-warning"></i>
                                        }
                                        else if (approver.Status == "Approved")
                                        {
                                            <i class="bi bi-check-circle-fill text-success"></i>
                                        }
                                        else
                                        {
                                            <i class="bi bi-x-circle-fill text-danger"></i>
                                        }
                                    </div>
                                    <div class="gp-approver-status-label mb-3">
                                        @* Label below icon *@
                                        @if (approver.Status == "Pending")
                                        {
                                            <span class="badge badge-modern badge-pending">Pending</span>
                                        }
                                        else if (approver.Status == "Approved")
                                        {
                                            <span class="badge badge-modern badge-approved">Approved</span>
                                        }
                                        else
                                        {
                                            <span class="badge badge-modern badge-denied">Denied</span>
                                        }
                                    </div>
                                    <h5 class="mb-1 gp-approver-name">
                                        @* Adjusted margin-bottom here *@
                                        @if (!string.IsNullOrEmpty(approver.Name))
                                        {
                                            @approver.Name
                                        }
                                        else
                                        {
                                            <span>Approver @approver.Number</span>
                                        }
                                    </h5>
                                    <hr class="gp-approver-divider" /> @* Visible Separator Line *@
                                    <form id="approverForm_@approver.Number" asp-controller="Approval" asp-action="SetApproval" method="post" class="mt-2 gp-approver-buttons-form">
                                        @* Adjusted margin-top here *@
                                        @* Added class for styling and id for JS *@
                                        <input type="hidden" name="id" value="@Model.Id" />
                                        <input type="hidden" name="type" value="GatePass" />
                                        <input type="hidden" name="approver" value="@approver.Number" />

                                        <div class="d-flex justify-content-center w-100">
                                            @* Added this div for inline buttons *@
                                            <button type="button" onclick="event.preventDefault(); submitApproverForm(@approver.Number, 'Approved');" class="btn btn-success me-2 gp-approver-btn">Approve</button>
                                            <button type="button" onclick="event.preventDefault(); submitApproverForm(@approver.Number, 'Denied');" class="btn btn-danger gp-approver-btn">Deny</button>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <!-- Final Confirmation Section - Redesigned -->
                <div class="mt-5 pt-4 border-top text-center">
                    <p class="final-status-text mb-4">Final Status: <strong class="final-status-@(Model.FinalStatus?.ToLower())">@Model.FinalStatus</strong></p> @* Final Status on top *@
                    <div class="d-flex justify-content-center gap-3">
                        @* Buttons side-by-side with gap *@
                        <form asp-controller="Approval" asp-action="ConfirmApproval" method="post" class="m-0">
                            @* Remove form margin *@
                            <input type="hidden" name="id" value="@Model.Id" />
                            <input type="hidden" name="type" value="GatePass" />
                            <button type="submit" class="btn btn-primary btn-lg btn-final-action">
                                @* Added btn-final-action class *@
                                <i class="bi bi-check2-circle me-2"></i>Confirm Final Decision
                            </button>
                        </form>
                        <a asp-action="Index" class="btn btn-secondary btn-lg btn-gray-modern btn-final-action">
                            @* Added btn-final-action class *@
                            <i class="bi bi-arrow-left me-2"></i>Back to List
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script>
    async function submitApproverForm(approverNumber, decision) {
        const form = document.getElementById(`approverForm_${approverNumber}`);
        const formData = new FormData(form);
        formData.append('decision', decision); // Add the decision to form data

        try {
            const response = await fetch(form.action, {
                method: form.method,
                body: formData
            });

            if (response.ok) {
                // If the submission is successful, reload the page to show updated status
                window.location.reload();
            } else {
                console.error('Form submission failed:', response.statusText);
                alert('An error occurred during approval. Please try again.');
            }
        } catch (error) {
            console.error('Error submitting form:', error);
            alert('An unexpected error occurred. Please check your network connection and try again.');
        }
    }
</script>